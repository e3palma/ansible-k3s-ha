---

- name: Helm Install
  become: yes
  shell: |
    if [ ! -f /usr/local/bin/helm ]; then
      curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
      chmod 700 get_helm.sh
      chown {{ lookup('env','USER') }}:{{ lookup('env','USER') }} get_helm.sh    
      ./get_helm.sh
    fi
    helm plugin install https://github.com/databus23/helm-diff &> /dev/null
  register: helmstatus
  ignore_errors: yes
  tags: status



- name: Helm add Rancher Repo
  kubernetes.core.helm_repository:
    name: rancher-latest
    repo_url: https://releases.rancher.com/server-charts/latest
  register: helmrepo
  tags: status

- name: Cattle-System Namespace
  kubernetes.core.k8s:
        kind: Namespace
        name: cattle-system
        api_version: v1
  tags: status

- name: Cert-Manager Install
  kubernetes.core.k8s:
    state: present
    definition: '{{ item }}'
    namespace: cert-manager
  with_items: '{{ lookup("url", "https://github.com/cert-manager/cert-manager/releases/download/v1.13.2/cert-manager.crds.yaml", split_lines=False) | from_yaml_all | list }}'
  
- name: Helm add Jetstack Repo
  kubernetes.core.helm_repository:
    name: jetstack
    repo_url: https://charts.jetstack.io
  register: jetstackrepo
  tags: status  

- name: Deploy Cert-Manager
  kubernetes.core.helm:
    name: cert-manager
    chart_ref: jetstack/cert-manager
    release_namespace: cert-manager
    create_namespace: true
    chart_version: v1.13.2

- name: Get an existing Service object
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    namespace: cert-manager
  register: certmanager

- name: Deploy Rancher
  kubernetes.core.helm:
    name: rancher
    chart_ref: rancher-latest/rancher
    release_namespace: cattle-system
    create_namespace: true
    release_values:
      hostname: "{{ hostname }}"
      bootstrapPassword: "{{ bootstrapPassword }}"
    wait: true
  tags:
    - rancher
    - status

- name: Rancher Status
  shell: |
    kubectl -n cattle-system rollout status deploy/rancher
    kubectl -n cattle-system get deploy rancher
    kubectl get svc -n cattle-system
  register: rancher
  tags: status
  
- name: Rancher Status
  debug: var=rancher
  tags: status

- name: Gather information about the Rancher deployment
  kubernetes.core.k8s:
    api_version: apps/v1
    kind: Deployment
    name: rancher
    namespace: cattle-system
  register: app_labels

- name: Expose Rancher
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:  
        name: rancher-lb
        namespace: cattle-system # Adjust namespace if needed
        labels: "{{ app_labels.result.metadata.labels }}"
      spec:
        selector:
          app: rancher
        ports:
          - port: 443
        type: LoadBalancer

- name: Wait for Rancher
  shell: |
    kubectl get svc -n cattle-system
  register: rancherlb
  tags: status

- name: Rancher LB Status
  debug: var=rancherlb
  tags: status